CropImage.DebugMode will cause human-readable javascript files to be used instead of minified versions.

Will use JQuery 1.7.1 instead of 1.3.2

Will not default to PNG or BMP when mime type is unknown, will default to jpeg.
Will not save images in .bmp or .tiff format, will default to jpeg.
.JPG, .PNG, and .GIF images will be saved as .JPG, .PNG, and .GIF images respectively.

Will not leak massive amounts of memory when unhanded exceptions occur during cropping or saving of images to disk.

Will not read original image into memory twice per postback; GetRawSize() has been removed. Server-side 'original size' 
processing has been replaced by usage of JCrop boxWidth/boxHeight feature (or, if enabled, server-side resizing).

IncludeJQuery property has been replaced by the JQueryInclude, JCropInclude, WebCropInclude, and JCropCssInclude properties and their 
associated enumerations. The default behavior for JQuery inclusion has changed to first attempt to use the Google CDN 
version, falling back to the embedded file. Other files default to WebResource.axd method. All behavior can be modified through the enumerations. You can even turn
 all (or individual) file inclusion off, and manually include the files for maximum control.

Removed GetMimeType - unreliable method of determining photo format, due to GDI bugs. Also will report PNG 
incorrectly on windows 7. New code will first examine file extension, followed by GDI format. 
Will also support PSD, RAW, and 24+ other formats if the FreeImageDecoder or WicDecoder plugins are installed.

The properties X2 and Y2 have been made readonly to prevent conflicting or inconsistent X/X2/W and Y/Y2/H values. 

Cropping rectangle should now default to the entire image instead of (10,10,20,20).

Default Jpeg save quality is now 90, not 100 (much better file size, indistinguishable visual quality). This can be adjusted with the new JpegQuality property.

Added ForceImageFormat property if users want to force conversion to a specific image format. 

Added FixedAspectRatio and FixedAspectRatioCheckboxID so that aspect ratio locking can either be enabled via a property or dynamically, client-side, via a linked checkbox.

TODO: fix loading of X,X2, Y, Y2 values to happen properly

